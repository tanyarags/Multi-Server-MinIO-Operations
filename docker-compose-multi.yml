version: '3'

services:
  # MinIO Server container
  minio-server:
    image: minio/minio:latest
    container_name: minio-server
    environment:
      - MINIO_ROOT_USER=minioadmin  # Default credentials for server
      - MINIO_ROOT_PASSWORD=minioadmin
    ports:
      - "9000:9000"  # API port
      - "9001:9001"  # Console port
    volumes:
      - ./server/data:/data  # Bind mount for data visibility
      - ./server/config:/root/.minio  # Mount point for server config
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - minio-network

  # Python Client container
  minio-client:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: minio-client
    environment:
      - MINIO_DEMO_MODE=false  # Set to 'true' to automatically start demo mode
    volumes:
      - ./client/demo_files:/app/demo_files
      - ./client/scripts:/app/scripts
      - ./client/config/minio_config.ini:/app/minio_config.ini  # Mount the config file from client folder
      - ./client/master-script.sh:/app/master-script.sh  # Mount the tmux demo script
    depends_on:
      - minio-server
    stdin_open: true
    tty: true
    networks:
      - minio-network

networks:
  minio-network:
    driver: bridge
